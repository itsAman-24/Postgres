<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Login</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <style>
      body {
        margin: 0;
        padding: 0;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(to right, #4e54c8, #8f94fb);
        color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        flex-direction: column;
      }

      .container {
        background: rgba(255, 255, 255, 0.1);
        padding: 2rem;
        border-radius: 1rem;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px);
        text-align: center;
      }

      h1 {
        margin-bottom: 1.5rem;
      }

      form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      input[type="email"],
      input[type="password"] {
        padding: 0.75rem;
        border: none;
        border-radius: 0.5rem;
        font-size: 1rem;
      }

      .g-recaptcha {
        background-color: rgba(
          255,
          255,
          255,
          0.9
        ); 
        padding: 0.7rem;
        border-radius: 0.5rem;
        display: inline-block;
        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.2);
      }

      button {
        background: #fff;
        color: #4e54c8;
        padding: 0.75rem;
        border: none;
        border-radius: 0.5rem;
        font-weight: bold;
        cursor: pointer;
        transition: background 0.3s ease;
      }

      button:hover {
        background: #f0f0f0;
      }

      .link {
        margin-top: 1rem;
      }

      .link a {
        color: #fff;
        text-decoration: underline;
      }

      .message {
        background: rgba(255, 255, 255, 0.2);
        padding: 0.5rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
      }

      @media screen and (max-width: 480px) {
        .container {
          padding: 1.2rem;
        }
      }
    </style>
  </head>
  <body>
    <%- include("partials/navbar") %>
    <div class="container">
      <h1>Login</h1>

      <% if (message) { %>
      <div class="message"><%= message %></div>
      <% } %>

      <form method="POST" action="/login">
        <input type="email" name="email" placeholder="Email" required />
        <input
          type="password"
          name="password"
          placeholder="Password"
          required
        />
        <div class="g-recaptcha" data-sitekey=""></div>
        <button type="submit">Login</button>
      </form>

      <div class="link">
        <p><a href="/register">Don't have an account? Register here</a></p>
      </div>
    </div>
    <script>

      document.addEventListener("DOMContentLoaded", function () {
          document.querySelector(".g-recaptcha").setAttribute("data-sitekey", "<%= process.env.RECAPTCHA_SITE_KEY %>");
      });

      const rateLimitMsg = "Too many login attempts. Please try again after 5 minutes.";
    
      const messageEl = document.querySelector(".message");
      const isRateLimited = messageEl && messageEl.textContent.includes("Too many login attempts");
    
      if (isRateLimited) {
        const inputs = document.querySelectorAll("input");
        const button = document.querySelector("button");
        
        // Disable inputs and button
        inputs.forEach(input => input.disabled = true);
        button.disabled = true;
        button.style.backgroundColor = "#ccc";
        button.style.cursor = "not-allowed";
        button.innerText = "Login (Blocked)";
    
        // Add countdown timer display
        const countdownDiv = document.createElement("div");
        countdownDiv.style.marginTop = "1rem";
        countdownDiv.style.fontWeight = "bold";
        countdownDiv.style.color = "yellow";
        messageEl.after(countdownDiv);
    
        let secondsLeft = 300; // 5 minutes
        const interval = setInterval(() => {
          const mins = Math.floor(secondsLeft / 60);
          const secs = secondsLeft % 60;
          countdownDiv.textContent = `‚è≥ Try again in ${mins}m ${secs}s`;
          secondsLeft--;
    
          if (secondsLeft <= 0) {
            clearInterval(interval);
            // Re-enable inputs and button
            inputs.forEach(input => input.disabled = false);
            button.disabled = false;
            button.style.backgroundColor = "#fff";
            button.style.cursor = "pointer";
            button.innerText = "Login";
            countdownDiv.textContent = "";
          }
        }, 1000);
      }
    </script>
    
    
  </body>
</html>
